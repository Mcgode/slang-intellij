{
    parserClass="slang.plugin.language.parser.SlangOldParser"
    parserUtilClass="slang.plugin.psi.SlangPsiUtil"

    psiClassPrefix="SlangOld"
    psiImplClassSuffix="Impl"
    psiPackage="slang.plugin.psi"
    psiImplPackage="slang.plugin.psi.impl"

    elementTypeHolderClass="slang.plugin.psi.SlangOldTypes"
    elementTypeClass="slang.plugin.psi.SlangElementType"
    tokenTypeClass="slang.plugin.psi.SlangTokenType"

    tokens=[
        LINE_COMMENT="regexp://+.*"
        MULTILINE_COMMENT="regexp:/\*([\s\S]*?)\*/[ \t\n\x0B\f\r]*"
        ADD_OP="+"
        SUB_OP="-"
        MUL_OP="*"
        DIV_OP="/"
        MOD_OP="%"
        LESS_OP="<"
        GREATER_OP=">"
        BITWISE_AND_OP="&"
        BITWISE_OR_OP="|"
        BITWISE_XOR_OP="^"
        BITWISE_NOT_OP="~"
        ADD_ASSIGN="+="
        SUB_ASSIGN="-="
        MUL_ASSIGN="*="
        DIV_ASSIGN="/="
        MOD_ASSIGN="%="
        AND_ASSIGN="&="
        OR_ASSIGN="|="
        XOR_ASSIGN="^="
        LEFT_SHIFT_ASSIGN="<<="
        RIGHT_SHIFT_ASSIGN=">>="
        // Storage types
        NAMESPACE="namespace"
        ENUM="enum"
        CLASS="class"
        STRUCT="struct"
        INTERFACE="interface"
        // Builtin types
        VOID="void"
        BOOL="bool"
        INT8="int8_t"
        INT16="int16_t"
        INT32="int"
        INT64="int64_t"
        UINT8="uint8_t"
        UINT16="uint16_t"
        UINT32="uint"
        UINT64="uint64_t"
        HALF="half"
        FLOAT="float"
        DOUBLE="double"
        // Keywords
        PRECISION="precision"
        EXPAND="expand"
        EACH="each"
        FUNCTYPE="functype"
        WHERE="where"
        // Literals
        UINT_LITERAL="regexp:(0x[\da-fA-F]+|\d+|Ob[01]+)u|U"
        INT_LITERAL="regexp:(0x[\da-fA-F]+|\d+|Ob[01]+)"
        FLOAT_LITERAL="regexp:((\d+[.]\d+)|(\d+[.])|([.]\d+))f"
        DOUBLE_LITERAL="regexp:((\d+[.]\d+)|(\d+[.])|([.]\d+))"
        BOOL_LITERAL="regexp:(true|false)"
        // Qualifiers
        CONST="const"
        IN="in"
        OUT="out"
        // Modifiers
        NO_DIFF="no_diff"
        FLAT="flat"
        // Identifiers
        IDENTIFIER="regexp:[_a-zA-Z][_a-zA-Z0-9]*"
    ]
}

file ::=



